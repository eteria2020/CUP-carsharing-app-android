buildscript {
    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0-alpha12'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.1'
    implementation project(':circlelayout')
}

apply from: rootProject.file('app/config.gradle')
apply from: rootProject.file('app/dependencies.gradle')
apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    flavorDimensions "default"
    defaultConfig {
        applicationId project.APPLICATION_ID
        vectorDrawables.useSupportLibrary = true
        targetSdkVersion rootProject.ext.targetSdkVersion
        minSdkVersion rootProject.ext.minSdkVersion
        versionCode 343
        versionName "3.2.9"

        multiDexEnabled true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release

            testCoverageEnabled true

            applicationIdSuffix ".eteria"
            resValue "string", "google_map_api_key", "AIzaSyDO5blXgSSM7hvNnsde0qM_rnK7nkdICUA"
            resValue "string", "google_place_api_key", "AIzaSyAnVjGP9ZCkSkBVkrX-5SBdmNW9AwE_Gew"
            resValue "string", "google_direction_api_key", "AIzaSyBEMZPnKaJgmjXnzeWpitYuqBrUtDf_Asg"
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            ext.betaDistributionReleaseNotesFilePath = "app/fabric/release_note.txt"
            ext.betaDistributionGroupAliasesFilePath = "app/fabric/testers_group.txt"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".eteria"
            resValue "string", "google_map_api_key", "AIzaSyDO5blXgSSM7hvNnsde0qM_rnK7nkdICUA"
            resValue "string", "google_place_api_key", "AIzaSyAnVjGP9ZCkSkBVkrX-5SBdmNW9AwE_Gew"
            resValue "string", "google_direction_api_key", "AIzaSyBEMZPnKaJgmjXnzeWpitYuqBrUtDf_Asg"
        }
    }
    /*
     * Apk Name Beautifier
     */
    /*applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def String fileName = project.APK_NAME + "_" + variant.baseName + "_v_" + variant.versionName + "_" + variant.versionCode
            def String apkFileName = fileName + ".apk"
            def String apkZipAlignFileName = fileName + "_zipAlign.apk"
            if (output.zipAlign) {
                output.outputFile = new File(output.outputFile.parent, apkZipAlignFileName)
            }
            output.packageApplication.outputFile = new File(output.packageApplication.outputFile.parent, apkFileName)
        }
    }
    /*
     *  Filter useless variants (like "mockRelease")
     */
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true);
        }
    }
    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'main/AndroidManifest.xml'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'InvalidPackage'
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    productFlavors {
        miavm {
        }
        stage {
        }
    }
    buildToolsVersion '27.0.3'
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

configurations {
    compile.exclude group: 'stax'
    compile.exclude group: 'xpp3'
}

// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
